{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar imageMap = {\n  \"golden_temple.jpg\": require(\"../../assets/golden_temple.jpg\"),\n  \"vaishno.png\": require(\"../../assets/vaishno.png\"),\n  \"tirupati.jpg\": require(\"../../assets/tirupati.jpg\"),\n  \"sidhivinayak.jpg\": require(\"../../assets/sidhivinayak.jpg\"),\n  \"meenakshi.jpg\": require(\"../../assets/meenakshi.jpg\"),\n  \"jaganath.jpg\": require(\"../../assets/jaganath.jpg\")\n};\nexport default function TempleDetailScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var templeData = route.params.templeData;\n  var renderStars = function renderStars(rating) {\n    return [1, 2, 3, 4, 5].map(function (star) {\n      return _jsx(Icon, {\n        name: \"star\",\n        size: 20,\n        color: star <= rating ? \"#FFD700\" : \"#E0E0E0\"\n      }, star);\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: imageMap[templeData.image],\n      style: styles.headerImage\n    }), _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsx(Text, {\n        style: styles.templeName,\n        children: templeData.name\n      }), _jsxs(View, {\n        style: styles.locationRow,\n        children: [_jsx(Icon, {\n          name: \"location-on\",\n          size: 18,\n          color: \"#666\"\n        }), _jsx(Text, {\n          style: styles.locationText,\n          children: templeData.location\n        })]\n      }), _jsxs(View, {\n        style: styles.ratingRow,\n        children: [renderStars(templeData.rating), _jsxs(Text, {\n          style: styles.ratingText,\n          children: [templeData.rating, \" (\", templeData.reviews, \" reviews)\"]\n        })]\n      }), _jsx(Text, {\n        style: styles.descriptionTitle,\n        children: \"About\"\n      }), _jsx(Text, {\n        style: styles.descriptionText,\n        children: templeData.description\n      }), _jsx(LinearGradient, {\n        colors: [\"#FF6B35\", \"#FF8A50\"],\n        style: styles.tripButtonGradient,\n        children: _jsxs(TouchableOpacity, {\n          style: styles.tripButton,\n          onPress: function onPress() {\n            return navigation.navigate('Plan', {\n              templeName: templeData.name\n            });\n          },\n          children: [_jsx(Icon, {\n            name: \"event\",\n            size: 20,\n            color: \"#fff\"\n          }), _jsx(Text, {\n            style: styles.tripButtonText,\n            children: \"Plan Your Trip\"\n          })]\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  headerImage: {\n    width: \"100%\",\n    height: 250,\n    resizeMode: \"cover\"\n  },\n  infoContainer: {\n    padding: 20,\n    marginTop: -20,\n    backgroundColor: \"#fff\",\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n  },\n  templeName: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    color: \"#333\",\n    marginBottom: 8\n  },\n  locationRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 12\n  },\n  locationText: {\n    marginLeft: 8,\n    color: \"#666\",\n    fontSize: 16\n  },\n  ratingRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    paddingBottom: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#EEE\"\n  },\n  ratingText: {\n    marginLeft: 10,\n    color: \"#666\",\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  descriptionTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#444\",\n    marginBottom: 10\n  },\n  descriptionText: {\n    fontSize: 16,\n    color: \"#666\",\n    lineHeight: 24,\n    marginBottom: 30\n  },\n  tripButtonGradient: {\n    borderRadius: 25,\n    elevation: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4\n  },\n  tripButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 14,\n    borderRadius: 25\n  },\n  tripButtonText: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginLeft: 10\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"elevation\": {\n      \"elevation\": 3\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","View","Text","ScrollView","Image","StyleSheet","TouchableOpacity","Icon","LinearGradient","jsx","_jsx","jsxs","_jsxs","imageMap","require","TempleDetailScreen","_ref","route","navigation","templeData","params","renderStars","rating","map","star","name","size","color","style","styles","container","children","source","image","headerImage","infoContainer","templeName","locationRow","locationText","location","ratingRow","ratingText","reviews","descriptionTitle","descriptionText","description","colors","tripButtonGradient","tripButton","onPress","navigate","tripButtonText","create","flex","backgroundColor","width","height","resizeMode","padding","marginTop","borderTopLeftRadius","borderTopRightRadius","fontSize","fontWeight","marginBottom","flexDirection","alignItems","marginLeft","paddingBottom","borderBottomWidth","borderBottomColor","lineHeight","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","justifyContent","paddingVertical","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/RAJAN KUMAR/Desktop/BhaktiBhraman/V1-app/src/screens/TempleDetailScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nconst imageMap = {\r\n  \"golden_temple.jpg\": require(\"../../assets/golden_temple.jpg\"),\r\n  \"vaishno.png\": require(\"../../assets/vaishno.png\"),\r\n  \"tirupati.jpg\": require(\"../../assets/tirupati.jpg\"),\r\n  \"sidhivinayak.jpg\": require(\"../../assets/sidhivinayak.jpg\"),\r\n  \"meenakshi.jpg\": require(\"../../assets/meenakshi.jpg\"),\r\n  \"jaganath.jpg\": require(\"../../assets/jaganath.jpg\"),\r\n};\r\n// -----------------\r\n\r\n// The screen component receives { route } which contains the parameters\r\nexport default function TempleDetailScreen({ route, navigation }) {\r\n  // Get the templeData object we passed from HomeScreen\r\n  const { templeData } = route.params;\r\n\r\n  // Re-use the rating logic from HomeScreen\r\n  const renderStars = (rating) => {\r\n    return [1, 2, 3, 4, 5].map((star) => (\r\n      <Icon\r\n        key={star}\r\n        name=\"star\"\r\n        size={20}\r\n        color={star <= rating ? \"#FFD700\" : \"#E0E0E0\"}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* 1. Image */}\r\n      <Image source={imageMap[templeData.image]} style={styles.headerImage} />\r\n\r\n      <View style={styles.infoContainer}>\r\n        {/* 2. Name */}\r\n        <Text style={styles.templeName}>{templeData.name}</Text>\r\n\r\n        {/* 3. Location */}\r\n        <View style={styles.locationRow}>\r\n          <Icon name=\"location-on\" size={18} color=\"#666\" />\r\n          <Text style={styles.locationText}>{templeData.location}</Text>\r\n        </View>\r\n\r\n        {/* 4. Rating */}\r\n        <View style={styles.ratingRow}>\r\n          {renderStars(templeData.rating)}\r\n          <Text style={styles.ratingText}>\r\n            {templeData.rating} ({templeData.reviews} reviews)\r\n          </Text>\r\n        </View>\r\n\r\n        {/* 5. Description (which wasn't on the card but is in the JSON) */}\r\n        <Text style={styles.descriptionTitle}>About</Text>\r\n        <Text style={styles.descriptionText}>{templeData.description}</Text>\r\n\r\n        {/* 6. Plan Your Trip Button */}\r\n        <LinearGradient\r\n          colors={[\"#FF6B35\", \"#FF8A50\"]}\r\n          style={styles.tripButtonGradient}\r\n        >\r\n          <TouchableOpacity\r\n            style={styles.tripButton}\r\n            onPress={() => navigation.navigate('Plan', { templeName: templeData.name })}\r\n          >\r\n            <Icon name=\"event\" size={20} color=\"#fff\" />\r\n            <Text style={styles.tripButtonText}>Plan Your Trip</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n// --- Styles for this screen ---\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  headerImage: {\r\n    width: \"100%\",\r\n    height: 250,\r\n    resizeMode: \"cover\",\r\n  },\r\n  infoContainer: {\r\n    padding: 20,\r\n    marginTop: -20, // Pulls info up over the image slightly\r\n    backgroundColor: \"#fff\",\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n  },\r\n  templeName: {\r\n    fontSize: 28,\r\n    fontWeight: \"bold\",\r\n    color: \"#333\",\r\n    marginBottom: 8,\r\n  },\r\n  locationRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 12,\r\n  },\r\n  locationText: {\r\n    marginLeft: 8,\r\n    color: \"#666\",\r\n    fontSize: 16,\r\n  },\r\n  ratingRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    paddingBottom: 20,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#EEE\",\r\n  },\r\n  ratingText: {\r\n    marginLeft: 10,\r\n    color: \"#666\",\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  descriptionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"#444\",\r\n    marginBottom: 10,\r\n  },\r\n  descriptionText: {\r\n    fontSize: 16,\r\n    color: \"#666\",\r\n    lineHeight: 24,\r\n    marginBottom: 30,\r\n  },\r\n  tripButtonGradient: {\r\n    borderRadius: 25,\r\n    elevation: 5,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 4,\r\n  },\r\n  tripButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 14,\r\n    borderRadius: 25,\r\n  },\r\n  tripButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 10,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}